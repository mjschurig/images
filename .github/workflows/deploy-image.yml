name: Deploy Docker Image

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name of the image to deploy (folder name)'
        required: true
        type: string
        default: 'marker'
      version:
        description: 'Version tag (e.g., v1.0.0, v1.2.3)'
        required: true
        type: string
        default: 'v1.0.0'
      registry:
        description: 'Registry to push to'
        required: true
        type: choice
        options:
          - 'ghcr.io'
          - 'docker.io'
          - 'both'
        default: 'ghcr.io'

env:
  GITHUB_REGISTRY: ghcr.io
  DOCKER_REGISTRY: docker.io

jobs:
  deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate image directory
        run: |
          if [ ! -d "${{ github.event.inputs.image_name }}" ]; then
            echo "Error: Directory '${{ github.event.inputs.image_name }}' does not exist"
            exit 1
          fi
          if [ ! -f "${{ github.event.inputs.image_name }}/Dockerfile" ]; then
            echo "Error: Dockerfile not found in '${{ github.event.inputs.image_name }}' directory"
            exit 1
          fi
          echo "âœ… Validated: ${{ github.event.inputs.image_name }} directory exists with Dockerfile"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: ${{ github.event.inputs.registry == 'ghcr.io' || github.event.inputs.registry == 'both' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        if: ${{ github.event.inputs.registry == 'docker.io' || github.event.inputs.registry == 'both' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.event.inputs.registry == 'ghcr.io' && format('{0}/{1}/{2}', env.GITHUB_REGISTRY, github.repository, github.event.inputs.image_name) || '' }}
            ${{ github.event.inputs.registry == 'docker.io' && format('{0}/{1}', secrets.DOCKER_USERNAME, github.event.inputs.image_name) || '' }}
            ${{ github.event.inputs.registry == 'both' && format('{0}/{1}/{2}', env.GITHUB_REGISTRY, github.repository, github.event.inputs.image_name) || '' }}
            ${{ github.event.inputs.registry == 'both' && format('{0}/{1}', secrets.DOCKER_USERNAME, github.event.inputs.image_name) || '' }}
          tags: |
            type=raw,value=${{ github.event.inputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ github.event.inputs.image_name }}
          file: ./${{ github.event.inputs.image_name }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        if: ${{ github.event.inputs.registry == 'ghcr.io' || github.event.inputs.registry == 'both' }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.GITHUB_REGISTRY }}/${{ github.repository }}/${{ github.event.inputs.image_name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Image deployment summary
        run: |
          echo "## ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ github.event.inputs.image_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** ${{ github.event.inputs.registry }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags pushed:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image digest:** \`${{ steps.push.outputs.digest }}\`" >> $GITHUB_STEP_SUMMARY 